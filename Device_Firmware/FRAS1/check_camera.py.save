def camer():
    import cv2
    from picamera.array import PiBGRArray
    from picamera2 import PiCamera2
    import os
    # Load the cascade
#    face_cascade = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")
    face_cascade = cv2.CascadeClassifier( os.path.join(cv2.data.haarcascades, "haarcascade_frontalface_default.xml") )
    # To capture video from webcam.
    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        print("Cannot Open Camera")
        exit()
    while True:
        # Read the frame
        _, img = cap.read()
#        ret, img = cap.read()
#        _, img = cv2.imread(img_path)
#        if not _:
#                print("Can't receive frame . Exiting...")
#                break
#        if _:  # if ret is True:
# 	        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    # ... other code ...
#        else:
#                print("empty frame")
#                exit(1)
        # Convert to grayscale
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        #gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

        # Detect the faces
        faces = face_cascade.detectMultiScale(gray, 1.3, 5, minSize=(30, 30),flags = cv2.CASCADE_SCALE_IMAGE)

        # Draw the rectangle around each face
        for (x, y, w, h) in faces:
            cv2.rectangle(img, (x, y), (x + w, y + h), (10,159,255), 2)


        # Display
        cv2.imshow('Webcam Check', img)

        # Stop if escape key is pressed
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Release the VideoCapture object
    cap.release()
    cv2.destroyAllWindows()


